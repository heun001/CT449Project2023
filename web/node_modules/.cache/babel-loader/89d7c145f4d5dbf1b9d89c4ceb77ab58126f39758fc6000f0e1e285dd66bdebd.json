{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport store from \"../vuex/store\";\nimport \"../../public/assets/css/chat.css\";\nexport default {\n  data() {\n    return {\n      _id: \"\",\n      name: \"\",\n      message: \"\",\n      page: 0,\n      receiver: null,\n      btnLoadMoreClass: \"fa fa-repeat\",\n      hasMoreMessages: true,\n      selectedMessageId: 0,\n      selectedMessageText: \"\",\n      password: \"\",\n      searchContact: \"\"\n    };\n  },\n  computed: {\n    contacts() {\n      return store.getters.getContacts;\n    },\n    messages() {\n      return store.getters.getMessages;\n    }\n  },\n  methods: {\n    onSearchKeyPress: function () {\n      if (event.key == \"Enter\") {\n        this.doSearchContact();\n      }\n    },\n    onSearchKeyUp: function () {\n      this.doSearchContact();\n    },\n    showContactOptions: function () {\n      var menu = document.getElementById(\"contextMenuContactOptions\");\n      menu.style.display = 'block';\n      menu.style.left = event.pageX + \"px\";\n      menu.style.top = event.pageY + \"px\";\n    },\n    copyMessage: function () {\n      navigator.clipboard.writeText(this.selectedMessageText);\n    },\n    showMoreOptions: function (msg) {\n      const isMyMessage = event.target.getAttribute(\"is-my-message\");\n      this.selectedMessageId = msg._id;\n      this.selectedMessageText = msg.message;\n      var menu = document.getElementById(\"contextMenu\");\n      menu.style.display = 'block';\n      if (isMyMessage == \"true\") {\n        menu.style.left = event.pageX - 200 + \"px\";\n      } else {\n        menu.style.left = event.pageX + \"px\";\n      }\n      menu.style.top = event.pageY + \"px\";\n      document.querySelector(\".bookmark i\").className = \"fa fa-bookmark-o\";\n      if (msg.bookmarkBy) {\n        document.querySelector(\".bookmark i\").className = \"fa fa-bookmark\";\n      }\n    },\n    attachEventListeners: function () {\n      const self = this;\n      document.addEventListener('click', function (e) {\n        const moreOptions = document.querySelectorAll(\".more-options\");\n        let isClickedMoreOptions = true;\n        for (let a = 0; a < moreOptions.length; a++) {\n          if (moreOptions[a].contains(e.target)) {\n            // Clicked in box\n            isClickedMoreOptions = true;\n            break;\n          } else {\n            // Clicked outside the box\n            isClickedMoreOptions = false;\n          }\n        }\n        if (!isClickedMoreOptions) {\n          document.getElementById(\"contextMenu\").style.display = \"none\";\n          document.getElementById(\"contextMenuContactOptions\").style.display = \"none\";\n        }\n      });\n    },\n    getChatPersonPicture: function (user) {\n      if (typeof user.picture !== \"undefined\" && user.picture != \"\") {\n        return this.$apiURL + \"/\" + user.picture;\n      }\n      return \"../../assets/img/avatar2.png\";\n    },\n    getPicture: function (user) {\n      if (typeof user.picture !== \"undefined\") {\n        return this.$apiURL + \"/\" + user.picture;\n      }\n      return \"../../assets/img/avatar7.png\";\n    },\n    doSearchContact: async function () {\n      const formData = new FormData();\n      formData.append(\"searchContact\", this.searchContact);\n      const response = await axios.post(this.$apiURL + \"/contact/search\", formData, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        store.commit(\"setContacts\", response.data.data);\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    doSearch: async function () {\n      const form = event.target;\n      const formData = new FormData(form);\n      formData.append(\"email\", this.email);\n      formData.append(\"password\", this.password);\n      const response = await axios.post(this.$apiURL + \"/chat/search\", formData, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        store.commit(\"setMessages\", []);\n        for (let a = 0; a < response.data.data.length; a++) {\n          store.commit(\"prependMessage\", response.data.data[a]);\n        }\n        this.attachEventListeners();\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    getMessageTime: function (time) {\n      const dateObj = new Date(time);\n      let timeStr = dateObj.getDate() + \" \" + this.$months[dateObj.getMonth()] + \", \" + dateObj.getFullYear() + \" \" + dateObj.getHours() + \":\" + dateObj.getMinutes() + \":\" + dateObj.getSeconds();\n      return timeStr;\n    },\n    loadMore: function () {\n      this.btnLoadMoreClass = \"fa fa-spinner fa-spin\";\n      this.page++;\n      this.getData();\n    },\n    sendMessage: async function () {\n      const formData = new FormData();\n      formData.append(\"_id\", this._id);\n      formData.append(\"message\", this.message);\n      formData.append(\"password\", this.password);\n      const response = await axios.post(this.$apiURL + \"/chat/send\", formData, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        this.message = \"\";\n        store.commit(\"appendMessage\", response.data.messageObject);\n        this.attachEventListeners();\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    deleteContact: async function () {\n      const self = this;\n      swal.fire({\n        title: 'Are you sure?',\n        text: \"This will be removed from your contact\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(async function (result) {\n        if (result.isConfirmed) {\n          self.isDeleting = true;\n          const formData = new FormData();\n          formData.append(\"_id\", self._id);\n          const response = await axios.post(self.$apiURL + \"/contact/delete\", formData, {\n            headers: self.$headers\n          });\n          self.isDeleting = false;\n          if (response.data.status == \"success\") {\n            swal.fire('Deleted!', response.data.message, 'success');\n            const contactsArr = self.contacts;\n            for (let a = 0; a < contactsArr.length; a++) {\n              if (contactsArr[a]._id == self._id) {\n                contactsArr.splice(a, 1);\n                break;\n              }\n            }\n            self.contacts = contactsArr;\n            store.commit(\"setMessages\", []);\n            self.totalMessages = 0;\n            self.name = \"\";\n            self._id = \"\";\n          } else {\n            swal.fire(\"Error\", response.data.message, \"error\");\n          }\n        }\n      });\n    },\n    onChatSelected: function () {\n      const self = this;\n      store.commit(\"setMessages\", []);\n      this._id = event.target.getAttribute(\"data-id\");\n      this.name = event.target.getAttribute(\"data-name\");\n      this.getChat();\n    },\n    getChat: async function () {\n      const self = this;\n      const formData = new FormData();\n      formData.append(\"_id\", this._id);\n      formData.append(\"page\", this.page);\n      formData.append(\"password\", this.password);\n      const response = await axios.post(this.$apiURL + \"/chat/fetch\", formData, {\n        headers: this.$headers\n      });\n      this.btnLoadMoreClass = \"fa fa-repeat\";\n      if (response.data.status == \"success\") {\n        this.totalMessages = response.data.totalMessages;\n        for (let a = 0; a < response.data.messages.length; a++) {\n          store.commit(\"prependMessage\", response.data.messages[a]);\n        }\n        this.hasMoreMessages = response.data.messages.length == 0 ? false : true;\n        this.receiver = response.data.receiver;\n        this.user = response.data.user;\n        this.attachEventListeners();\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    getData: async function () {\n      const self = this;\n      const response = await axios.post(this.$apiURL + \"/contact/fetch\", null, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        store.commit(\"setContacts\", response.data.contacts);\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    }\n  },\n  mounted: function () {\n    this.getData();\n  },\n  watch: {\n    $route: function (to, from) {\n      store.commit(\"setMessages\", []);\n      store.commit(\"setContacts\", []);\n      this._id = \"\";\n      this.name = \"\";\n      this.isArchive = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","swal","store","data","_id","name","message","page","receiver","btnLoadMoreClass","hasMoreMessages","selectedMessageId","selectedMessageText","password","searchContact","computed","contacts","getters","getContacts","messages","getMessages","methods","onSearchKeyPress","event","key","doSearchContact","onSearchKeyUp","showContactOptions","menu","document","getElementById","style","display","left","pageX","top","pageY","copyMessage","navigator","clipboard","writeText","showMoreOptions","msg","isMyMessage","target","getAttribute","querySelector","className","bookmarkBy","attachEventListeners","self","addEventListener","e","moreOptions","querySelectorAll","isClickedMoreOptions","a","length","contains","getChatPersonPicture","user","picture","$apiURL","getPicture","formData","FormData","append","response","post","headers","$headers","status","commit","fire","doSearch","form","email","getMessageTime","time","dateObj","Date","timeStr","getDate","$months","getMonth","getFullYear","getHours","getMinutes","getSeconds","loadMore","getData","sendMessage","messageObject","deleteContact","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","isDeleting","contactsArr","splice","totalMessages","onChatSelected","getChat","mounted","watch","$route","to","from","isArchive"],"sources":["D:\\2023\\2023_PTUDW\\chat-station-mevn-free\\chat-station-mevn-free\\web\\src\\components\\HomeComponent.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\" id=\"home-page\" style=\"padding-top: 50px; padding-bottom: 50px;\">\n        <div class=\"row\" style=\"margin-bottom: 50px;\">\n            <div class=\"offset-md-10 col-md-2\">\n                <router-link class=\"btn btn-primary\" to=\"/contacts/add\">Add Contact</router-link>\n            </div>\n        </div>\n\n        <div class=\"container-fluid h-100\">\n            <div class=\"row justify-content-center h-100\">\n                <div class=\"col-md-4 col-xl-3 chat\"><div class=\"card mb-sm-3 mb-md-0 contacts_card\">\n                    <div class=\"card-header\">\n                        <div class=\"input-group\">\n                            <input type=\"text\" placeholder=\"Search...\" class=\"form-control search\" v-model=\"searchContact\" v-on:keypress=\"onSearchKeyPress\" v-on:keyup=\"onSearchKeyUp\" />\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text search_btn\"><i class=\"fa fa-search\" v-on:click=\"doSearchContact\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"card-body contacts_body\">\n                        <ul class=\"contacts\">\n                            <li v-for=\"contact in contacts\" v-bind:key=\"contact._id\" v-bind:class=\"contact._id == _id ? 'active' : ''\">\n                                <div class=\"d-flex bd-highlight\">\n                                    <div class=\"user_info\">\n                                        <span v-text=\"contact.name\" style=\"cursor: pointer;\" v-bind:data-id=\"contact._id\" v-bind:data-name=\"contact.name\" v-bind:data-is-archive=\"contact.isArchive\" v-on:click=\"onChatSelected\"></span>\n                                        <p v-if=\"(contact.unreadMessages > 0)\" v-text=\"' (' + contact.unreadMessages + ')'\" class=\"text-danger\"></p>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"card-footer\"></div>\n                </div></div>\n                <div class=\"col-md-8 col-xl-6 chat\">\n                    <div class=\"card\">\n                        <div class=\"card-header msg_head\">\n                            <div class=\"d-flex bd-highlight\">\n                                <div class=\"user_info\">\n                                    <span>Chat with <span v-text=\"name\"></span></span>\n                                    <p><span v-text=\"totalMessages\" style=\"font-size: 10px; color: rgba(255,255,255,0.6);\"></span> Messages</p>\n                                </div>\n                            </div>\n\n                            <span id=\"action_menu_btn\" class=\"more-options\" v-on:click=\"showContactOptions\"></span>\n                        </div>\n                        <div class=\"card-body msg_card_body\">\n\n                            <div v-for=\"msg in messages\" v-bind:key=\"msg._id\">\n\n                                <template v-if=\"user != null && user.email == msg.sender.email\">\n                                    <div class=\"d-flex justify-content-end mb-4\">\n                                        <div class=\"msg_cotainer_send\">\n                                            <template class=\"more-options\" v-on:click=\"showMoreOptions(msg)\" v-bind:is-my-message=\"true\">\n                                                <span v-text=\"msg.message\"></span>\n                                            </template>\n\n                                            <p class=\"msg_time message-data-time\" v-text=\"getMessageTime(msg.createdAt)\"></p>\n                                        </div>\n\n                                        <div class=\"img_cont_msg\">\n                                            <img v-bind:src=\"getPicture(msg.sender)\" class=\"rounded-circle user_img_msg\" />\n                                        </div>\n                                    </div>\n                                </template>\n\n                                <template v-else>\n                                    <div class=\"d-flex justify-content-start mb-4\">\n                                        <div class=\"img_cont_msg\">\n                                            <img v-bind:src=\"getPicture(msg.sender)\" class=\"rounded-circle user_img_msg\" />\n                                        </div>\n\n                                        <div class=\"msg_cotainer\">\n                                            <template class=\"more-options\" v-on:click=\"showMoreOptions(msg)\" v-bind:is-my-message=\"false\">\n                                                <span v-text=\"msg.message\"></span>\n                                            </template>\n\n                                            <p class=\"msg_time message-data-time\" v-text=\"getMessageTime(msg.createdAt)\"></p>\n                                        </div>\n                                    </div>\n                                </template>\n                            </div>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"input-group\">\n                                <textarea v-model=\"message\" class=\"form-control type_msg\" placeholder=\"Type your message...\"></textarea>\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text send_btn\"><i class=\"fa fa-location-arrow\" v-on:click=\"sendMessage\"></i></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"contextMenuContactOptions\" class=\"context-menu\" style=\"display: none\"> \n        <ul class=\"menu\">\n            <li><a href=\"javascript:void(0)\" v-on:click=\"deleteContact\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete</a></li>\n        </ul>\n    </div>\n\n    <div id=\"contextMenu\" class=\"context-menu\" style=\"display: none\"> \n        <ul class=\"menu\">\n            <li class=\"copy\"><a href=\"javascript:void(0)\" v-on:click=\"copyMessage\"><i class=\"fa fa-copy\" aria-hidden=\"true\"></i> Copy</a></li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n    import store from \"../vuex/store\"\n\n    import \"../../public/assets/css/chat.css\"\n    \n    export default {\n\n        data() {\n            return {\n                _id: \"\",\n                name: \"\",\n                message: \"\",\n                page: 0,\n                receiver: null,\n                btnLoadMoreClass: \"fa fa-repeat\",\n                hasMoreMessages: true,\n                selectedMessageId: 0,\n                selectedMessageText: \"\",\n                password: \"\",\n                searchContact: \"\"\n            }\n        },\n\n        computed: {\n            contacts() {\n                return store.getters.getContacts\n            },\n\n            messages() {\n                return store.getters.getMessages\n            }\n        },\n\n        methods: {\n            onSearchKeyPress: function () {\n                if (event.key == \"Enter\") {\n                    this.doSearchContact()\n                }\n            },\n\n            onSearchKeyUp: function () {\n                this.doSearchContact()\n            },\n            \n            showContactOptions: function () {\n                var menu = document.getElementById(\"contextMenuContactOptions\")\n                menu.style.display = 'block'\n                menu.style.left = event.pageX + \"px\"\n                menu.style.top = event.pageY + \"px\"\n            },\n\n            copyMessage: function() {\n                navigator.clipboard.writeText(this.selectedMessageText)\n            },\n\n            showMoreOptions: function (msg) {\n                const isMyMessage = event.target.getAttribute(\"is-my-message\")\n                this.selectedMessageId = msg._id\n                this.selectedMessageText = msg.message\n                \n                var menu = document.getElementById(\"contextMenu\")\n                menu.style.display = 'block'\n                if (isMyMessage == \"true\") {\n                    menu.style.left = (event.pageX - 200) + \"px\"\n                } else {\n                    menu.style.left = event.pageX + \"px\"\n                }\n                menu.style.top = event.pageY + \"px\"\n\n                document.querySelector(\".bookmark i\").className = \"fa fa-bookmark-o\"\n\n                if (msg.bookmarkBy) {\n                    document.querySelector(\".bookmark i\").className = \"fa fa-bookmark\"\n                }\n            },\n\n            attachEventListeners: function() {\n                const self = this\n\n                document.addEventListener('click', function(e) {\n                    const moreOptions = document.querySelectorAll(\".more-options\")\n                    let isClickedMoreOptions = true\n                    for (let a = 0; a < moreOptions.length; a++) {\n                        if (moreOptions[a].contains(e.target)) {\n                            // Clicked in box\n                            isClickedMoreOptions = true\n                            break\n                        } else {\n                            // Clicked outside the box\n                            isClickedMoreOptions = false\n                        }\n                    }\n                    if (!isClickedMoreOptions) {\n                        document.getElementById(\"contextMenu\").style.display = \"none\"\n                        document.getElementById(\"contextMenuContactOptions\").style.display = \"none\"\n                    }\n                })\n            },\n\n            getChatPersonPicture: function (user) {\n                if (typeof user.picture !== \"undefined\" && user.picture != \"\") {\n                    return this.$apiURL + \"/\" + user.picture\n                }\n                return \"../../assets/img/avatar2.png\"\n            },\n\n            getPicture: function (user) {\n                if (typeof user.picture !== \"undefined\") {\n                    return this.$apiURL + \"/\" + user.picture\n                }\n                return \"../../assets/img/avatar7.png\"\n            },\n\n            doSearchContact: async function () {\n                const formData = new FormData()\n                formData.append(\"searchContact\", this.searchContact)\n                \n                const response = await axios.post(\n                    this.$apiURL + \"/contact/search\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    store.commit(\"setContacts\", response.data.data)\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            doSearch: async function () {\n                const form = event.target\n                const formData = new FormData(form)\n                formData.append(\"email\", this.email)\n                formData.append(\"password\", this.password)\n                \n                const response = await axios.post(\n                    this.$apiURL + \"/chat/search\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    store.commit(\"setMessages\", [])\n                    for (let a = 0; a < response.data.data.length; a++) {\n                        store.commit(\"prependMessage\", response.data.data[a])\n                    }\n                    this.attachEventListeners()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            getMessageTime: function (time) {\n                const dateObj = new Date(time)\n                let timeStr = dateObj.getDate() + \" \" + this.$months[dateObj.getMonth()] + \", \" + dateObj.getFullYear() + \" \" + dateObj.getHours() + \":\" + dateObj.getMinutes() + \":\" + dateObj.getSeconds()\n                return timeStr\n            },\n\n            loadMore: function () {\n                this.btnLoadMoreClass = \"fa fa-spinner fa-spin\"\n                this.page++\n                this.getData()\n            },\n            \n            sendMessage: async function () {\n\n                const formData = new FormData()\n                formData.append(\"_id\", this._id)\n                formData.append(\"message\", this.message)\n                formData.append(\"password\", this.password)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/chat/send\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    this.message = \"\"\n\n                    store.commit(\"appendMessage\", response.data.messageObject)\n                    this.attachEventListeners()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            deleteContact: async function () {\n                const self = this\n\n                swal.fire({\n                    title: 'Are you sure?',\n                    text: \"This will be removed from your contact\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes, delete it!'\n                }).then(async function(result) {\n                    if (result.isConfirmed) {\n\n                        self.isDeleting = true;\n                        const formData = new FormData()\n                        formData.append(\"_id\", self._id)\n\n                        const response = await axios.post(\n                            self.$apiURL + \"/contact/delete\",\n                            formData,\n                            {\n                                headers: self.$headers\n                            }\n                        )\n                        self.isDeleting = false\n\n                        if (response.data.status == \"success\") {\n                            swal.fire(\n                                'Deleted!',\n                                response.data.message,\n                                'success'\n                            );\n\n                            const contactsArr = self.contacts;\n                            for (let a = 0; a < contactsArr.length; a++) {\n                                if (contactsArr[a]._id == self._id) {\n                                    contactsArr.splice(a, 1);\n                                    break;\n                                }\n                            }\n                            self.contacts = contactsArr\n\n                            store.commit(\"setMessages\", [])\n                            self.totalMessages = 0\n                            self.name = \"\"\n                            self._id = \"\"\n                        } else {\n                            swal.fire(\"Error\", response.data.message, \"error\");\n                        }\n                    }\n                })\n            },\n\n            onChatSelected: function () {\n                const self = this\n                store.commit(\"setMessages\", [])\n                this._id = event.target.getAttribute(\"data-id\")\n                this.name = event.target.getAttribute(\"data-name\")\n\n                this.getChat()\n            },\n\n            getChat: async function () {\n                const self = this\n                \n                const formData = new FormData()\n                formData.append(\"_id\", this._id)\n                formData.append(\"page\", this.page)\n                formData.append(\"password\", this.password)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/chat/fetch\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                this.btnLoadMoreClass = \"fa fa-repeat\"\n\n                if (response.data.status == \"success\") {\n\n                    this.totalMessages = response.data.totalMessages\n\n                    for (let a = 0; a < response.data.messages.length; a++) {\n                        store.commit(\"prependMessage\", response.data.messages[a])\n                    }\n                    this.hasMoreMessages = (response.data.messages.length == 0) ? false : true\n                    this.receiver = response.data.receiver\n                    this.user = response.data.user\n                    this.attachEventListeners()\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            },\n\n            getData: async function () {\n                const self = this\n\n                const response = await axios.post(\n                    this.$apiURL + \"/contact/fetch\",\n                    null,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    store.commit(\"setContacts\", response.data.contacts)\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\");\n                }\n            }\n        },\n\n        mounted: function () {\n            this.getData()\n        },\n\n        watch: {\n            $route: function (to, from) {\n                store.commit(\"setMessages\", [])\n                store.commit(\"setContacts\", [])\n                this._id = \"\"\n                this.name = \"\"\n                this.isArchive = false\n            }\n        }\n    }\n</script>\n\n<style>\n    #home-page {\n            height: 100%;\n            margin: 0;\n            background: #7F7FD5;\n           background: -webkit-linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);\n            background: linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);\n        }\n\n        .chat{\n            margin-top: auto;\n            margin-bottom: auto;\n        }\n        .card{\n            height: 500px;\n            border-radius: 15px !important;\n            background-color: rgba(0,0,0,0.4) !important;\n        }\n        .contacts_body{\n            padding:  0.75rem 0 !important;\n            overflow-y: auto;\n            white-space: nowrap;\n        }\n        .msg_card_body{\n            overflow-y: auto;\n        }\n        .card-header{\n            border-radius: 15px 15px 0 0 !important;\n            border-bottom: 0 !important;\n        }\n     .card-footer{\n        border-radius: 0 0 15px 15px !important;\n            border-top: 0 !important;\n            background-color: transparent !important;\n    }\n        .container{\n            align-content: center;\n        }\n        .search{\n            border-radius: 15px 0 0 15px !important;\n            background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color:white !important;\n        }\n        .search:focus{\n             box-shadow:none !important;\n           outline:0px !important;\n        }\n        .type_msg{\n            background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color:white !important;\n            height: 60px !important;\n            overflow-y: auto;\n        }\n            .type_msg:focus{\n             box-shadow:none !important;\n           outline:0px !important;\n        }\n        .attach_btn{\n    border-radius: 15px 0 0 15px !important;\n    background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color: white !important;\n            cursor: pointer;\n        }\n        .send_btn{\n    border-radius: 0 15px 15px 0 !important;\n    background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color: white !important;\n            cursor: pointer;\n        }\n        .search_btn{\n            border-radius: 0 15px 15px 0 !important;\n            background-color: rgba(0,0,0,0.3) !important;\n            border:0 !important;\n            color: white !important;\n            cursor: pointer;\n        }\n        .contacts{\n            list-style: none;\n            padding: 0;\n        }\n        .contacts li{\n            width: 100% !important;\n            padding: 5px 10px;\n            margin-bottom: 15px !important;\n        }\n    .active{\n            background-color: rgba(0,0,0,0.3);\n    }\n        .user_img{\n            height: 70px;\n            width: 70px;\n            border:1.5px solid #f5f6fa;\n        \n        }\n        .user_img_msg{\n            height: 40px;\n            width: 40px;\n            border:1.5px solid #f5f6fa;\n        \n        }\n    .img_cont{\n            position: relative;\n            height: 70px;\n            width: 70px;\n    }\n    .img_cont_msg{\n            height: 40px;\n            width: 40px;\n    }\n    .online_icon{\n        position: absolute;\n        height: 15px;\n        width:15px;\n        background-color: #4cd137;\n        border-radius: 50%;\n        bottom: 0.2em;\n        right: 0.4em;\n        border:1.5px solid white;\n    }\n    .offline{\n        background-color: #c23616 !important;\n    }\n    .user_info{\n        margin-top: auto;\n        margin-bottom: auto;\n        margin-left: 15px;\n    }\n    .user_info span{\n        font-size: 20px;\n        color: white;\n    }\n    .user_info p{\n    font-size: 10px;\n    color: rgba(255,255,255,0.6);\n    }\n    .video_cam{\n        margin-left: 50px;\n        margin-top: 5px;\n    }\n    .video_cam span{\n        color: white;\n        font-size: 20px;\n        cursor: pointer;\n        margin-right: 20px;\n    }\n    .msg_cotainer{\n        margin-top: auto;\n        margin-bottom: auto;\n        margin-left: 10px;\n        border-radius: 25px;\n        background-color: #82ccdd;\n        padding: 10px;\n        position: relative;\n    }\n    .msg_cotainer_send{\n        margin-top: auto;\n        margin-bottom: auto;\n        margin-right: 10px;\n        border-radius: 25px;\n        background-color: #78e08f;\n        padding: 10px;\n        position: relative;\n    }\n    .msg_time{\n        /*position: absolute;\n        left: 0;\n        bottom: -15px;\n        color: rgba(255,255,255,0.5);*/\n        font-size: 10px;\n        margin-bottom: 0px;\n        margin-top: 10px;\n    }\n    .msg_time_send{\n        position: absolute;\n        right:0;\n        bottom: -15px;\n        color: rgba(255,255,255,0.5);\n        font-size: 10px;\n    }\n    .msg_head{\n        position: relative;\n    }\n    #action_menu_btn{\n        position: absolute;\n        right: 10px;\n        top: 10px;\n        color: white;\n        cursor: pointer;\n        font-size: 20px;\n    }\n    .action_menu{\n        z-index: 1;\n        position: absolute;\n        padding: 15px 0;\n        background-color: rgba(0,0,0,0.5);\n        color: white;\n        border-radius: 15px;\n        top: 30px;\n        right: 15px;\n        display: none;\n    }\n    .action_menu ul{\n        list-style: none;\n        padding: 0;\n    margin: 0;\n    }\n    .action_menu ul li{\n        width: 100%;\n        padding: 10px 15px;\n        margin-bottom: 5px;\n    }\n    .action_menu ul li i{\n        padding-right: 10px;\n    \n    }\n    .action_menu ul li:hover{\n        cursor: pointer;\n        background-color: rgba(0,0,0,0.2);\n    }\n    @media(max-width: 576px){\n    .contacts_card{\n        margin-bottom: 15px !important;\n    }\n    }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}