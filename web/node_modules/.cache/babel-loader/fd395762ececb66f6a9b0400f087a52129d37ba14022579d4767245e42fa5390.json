{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport { io } from 'socket.io-client';\nimport store from \"../../vuex/store\";\nexport default {\n  data() {\n    return {\n      login: false,\n      user: null,\n      query: \"\"\n    };\n  },\n  methods: {\n    doSearch: async function () {\n      // create form data object and add searched query in it\n      const formData = new FormData();\n      formData.append(\"query\", this.query);\n\n      // call an AJAX to the server\n      const response = await axios.post(this.$apiURL + \"/search\",\n      // send the form data object with the request\n      formData,\n      // pass headers that contains access token\n      // so the server will know which user's contact to search\n      {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        // set the contacts array to the one received from API\n        store.commit(\"setContacts\", response.data.contacts);\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    doLogout: async function () {\n      const response = await axios.post(this.$apiURL + \"/logout\", null, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        // remove access token from local storage\n        localStorage.removeItem(this.$accessTokenKey);\n        window.location.href = \"/login\";\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    },\n    getUser: async function () {\n      const self = this;\n\n      // check if user is logged in\n      if (localStorage.getItem(this.$accessTokenKey)) {\n        const response = await axios.post(this.$apiURL + \"/getUser\", null, {\n          headers: this.$headers\n        });\n        if (response.data.status == \"success\") {\n          // user is logged in\n          this.$user = response.data.user;\n          socketIO.emit(\"connected\", this.$user.email);\n          socketIO.on(\"sendMessage\", async function (data) {\n            if (self.$route.path == \"/chat/\" + data.data.sender.email) {\n              store.commit(\"appendMessage\", data.data);\n            }\n            const Toast = swal.mixin({\n              toast: true,\n              position: 'bottom-right',\n              customClass: {\n                popup: 'colored-toast'\n              },\n              showConfirmButton: false,\n              timer: 10000,\n              timerProgressBar: true\n            });\n            await Toast.fire({\n              title: data.title\n            });\n          });\n          console.log(this.$user);\n        } else {\n          // user is logged out\n          localStorage.removeItem(this.$accessTokenKey);\n        }\n        this.login = localStorage.getItem(this.$accessTokenKey) != null;\n      } else {\n        this.login = false;\n      }\n      global.user = this.user;\n    }\n  },\n  mounted: function () {\n    this.getUser();\n    global.socketIO = io(this.$apiURL);\n  }\n};","map":{"version":3,"names":["axios","swal","io","store","data","login","user","query","methods","doSearch","formData","FormData","append","response","post","$apiURL","headers","$headers","status","commit","contacts","fire","message","doLogout","localStorage","removeItem","$accessTokenKey","window","location","href","getUser","self","getItem","$user","socketIO","emit","email","on","$route","path","sender","Toast","mixin","toast","position","customClass","popup","showConfirmButton","timer","timerProgressBar","title","console","log","global","mounted"],"sources":["D:\\2023\\2023_PTUDW\\chat-station-mevn-free\\chat-station-mevn-free\\web\\src\\components\\layouts\\AppHeader.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\" style=\"margin-bottom: 50px;\">\n        <div class=\"container-fluid\">\n\n            <router-link class=\"navbar-brand\" to=\"/\">\n                Chat Station\n            </router-link>\n\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor01\"\n                aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                <ul class=\"navbar-nav me-auto\">\n                    <li class=\"nav-item\">\n                        <router-link class=\"nav-link active\" to=\"/\">\n                            Home\n                            <span class=\"visually-hidden\">(current)</span>\n                        </router-link>\n                    </li>\n\n                    <li class=\"nav-item\" v-if=\"login\">\n                        <router-link class=\"nav-link\" to=\"/groups\">Groups</router-link>\n                    </li>\n\n                    <li class=\"nav-item\" v-if=\"!login\">\n                        <router-link class=\"nav-link\" to=\"/login\">Login</router-link>\n                    </li>\n\n                    <li class=\"nav-item\" v-if=\"!login\">\n                        <router-link class=\"nav-link\" to=\"/register\">Register</router-link>\n                    </li>\n\n                    <li class=\"nav-item dropdown\" v-if=\"login\">\n                        <a v-text=\"$user.name\" class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <li><a class=\"dropdown-item\" v-on:click=\"doLogout\" href=\"javascript:void(0);\">Logout</a></li>\n            </div>\n            </li>\n            </ul>\n\n            <form class=\"d-flex\" v-on:submit.prevent=\"doSearch\"            >\n                <input class=\"form-control me-sm-2\" type=\"text\" v-model=\"query\" placeholder=\"Search\">\n                <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n        </div>\n        </div>\n    </nav>\n</template>\n \n<script>\n\nimport axios from \"axios\"\nimport swal from \"sweetalert2\"\nimport { io } from 'socket.io-client'\nimport store from \"../../vuex/store\"\n\nexport default {\n    data() {\n        return {\n            login: false,\n            user: null,\n            query: \"\"\n        }\n    },\n\n    methods: {\n        doSearch: async function () {\n        // create form data object and add searched query in it\n        const formData = new FormData()\n        formData.append(\"query\", this.query)\n \n        // call an AJAX to the server\n        const response = await axios.post(\n            this.$apiURL + \"/search\",\n \n            // send the form data object with the request\n            formData,\n \n            // pass headers that contains access token\n            // so the server will know which user's contact to search\n            {\n                headers: this.$headers\n            }\n        )\n \n        if (response.data.status == \"success\") {\n            // set the contacts array to the one received from API\n            store.commit(\"setContacts\", response.data.contacts)\n        } else {\n            swal.fire(\"Error\", response.data.message, \"error\")\n        }\n    },\n\n        doLogout: async function () {\n            const response = await axios.post(\n                this.$apiURL + \"/logout\",\n                null,\n                {\n                    headers: this.$headers\n                }\n            );\n\n            if (response.data.status == \"success\") {\n                // remove access token from local storage\n                localStorage.removeItem(this.$accessTokenKey)\n\n                window.location.href = \"/login\"\n            } else {\n                swal.fire(\"Error\", response.data.message, \"error\");\n            }\n        },\n\n        getUser: async function () {\n            const self = this\n\n            // check if user is logged in\n            if (localStorage.getItem(this.$accessTokenKey)) {\n                const response = await axios.post(\n                    this.$apiURL + \"/getUser\",\n                    null,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    // user is logged in\n                    this.$user = response.data.user\n                    socketIO.emit(\"connected\", this.$user.email)\n\n                    socketIO.on(\"sendMessage\", async function (data) {\n                        if (self.$route.path == \"/chat/\" + data.data.sender.email) {\n                            store.commit(\"appendMessage\", data.data)\n                        }\n                        const Toast = swal.mixin({\n                            toast: true,\n                            position: 'bottom-right',\n                            customClass: {\n                                popup: 'colored-toast'\n                            },\n                            showConfirmButton: false,\n                            timer: 10000,\n                            timerProgressBar: true\n                        })\n\n                        await Toast.fire({\n                            title: data.title\n                        })\n                    })\n                    console.log(this.$user)\n                } else {\n                    // user is logged out\n                    localStorage.removeItem(this.$accessTokenKey);\n                }\n\n                this.login = (localStorage.getItem(this.$accessTokenKey) != null);\n            } else {\n                this.login = false;\n            }\n\n            global.user = this.user\n        },\n    },\n\n    mounted: function () {\n        this.getUser();\n        global.socketIO = io(this.$apiURL)\n\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}