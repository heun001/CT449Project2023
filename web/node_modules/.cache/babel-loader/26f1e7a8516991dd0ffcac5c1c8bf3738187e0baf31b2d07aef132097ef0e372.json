{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\",\n  style: {\n    \"margin-top\": \"50px\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-md-12\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Notifications\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_5 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Type\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_7 = [\"textContent\"];\nconst _hoisted_8 = [\"textContent\"];\nconst _hoisted_9 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_10 = [\"value\"];\nconst _hoisted_11 = [\"value\", \"isDeleting\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" heading \"), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" show all notifications \"), _createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.notifications, notification => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: notification._id\n    }, [_createCommentVNode(\" show type of notification \"), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      textContent: _toDisplayString(notification.type)\n    }, null, 8 /* PROPS */, _hoisted_7), _createTextVNode(\"Â  \"), _createCommentVNode(\" if type is group invite, then we also show the name of group \"), notification.type == 'group_invite' ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      textContent: _toDisplayString(notification.group.name)\n    }, null, 8 /* PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" a button to delete the notification \"), _createElementVNode(\"td\", _hoisted_9, [_createElementVNode(\"form\", {\n      onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.deleteNotification && $options.deleteNotification(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"input\", {\n      type: \"hidden\",\n      name: \"_id\",\n      value: notification._id,\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_10), _createElementVNode(\"input\", {\n      type: \"submit\",\n      value: _ctx.isDeleting ? 'Deleting...' : 'Delete',\n      isDeleting: _ctx.disabled,\n      class: \"btn btn-danger\"\n    }, null, 8 /* PROPS */, _hoisted_11)], 32 /* HYDRATE_EVENTS */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$options","notifications","notification","key","_id","_toDisplayString","type","group","name","_hoisted_9","onSubmit","_cache","_withModifiers","args","deleteNotification","value","required","_ctx","isDeleting","disabled"],"sources":["D:\\2023\\2023_PTUDW\\chat-station-mevn-free\\chat-station-mevn-free\\web\\src\\components\\NotificationsComponent.vue"],"sourcesContent":["<template>\n\t<div class=\"container\" style=\"margin-top: 50px;\">\n\t\t<!-- heading -->\n\t\t<div class=\"row\">\n\t        <div class=\"col-md-12\">\n\t            <h1 class=\"text-center\">Notifications</h1>\n\t        </div>\n\t    </div>\n\t    \n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<!-- show all notifications -->\n\t\t\t\t<table class=\"table table-hover\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr v-for=\"notification in notifications\" v-bind:key=\"notification._id\">\n\t\t\t\t\t\t\t<!-- show type of notification -->\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span v-text=\"notification.type\"></span>&nbsp;\n\n\t\t\t\t\t\t\t\t<!-- if type is group invite, then we also show the name of group -->\n\t\t\t\t\t\t\t\t<template v-if=\"notification.type == 'group_invite'\">\n\t\t\t\t\t\t\t\t\t<span v-text=\"notification.group.name\"></span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t<!-- a button to delete the notification -->\n\t\t\t\t\t\t\t<td style=\"display: flex;\">\n\t\t\t\t\t\t\t\t<form v-on:submit.prevent=\"deleteNotification\">\n\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"_id\" v-bind:value=\"notification._id\" required />\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" v-bind:value=\"isDeleting ? 'Deleting...' : 'Delete'\" v-bind:isDeleting=\"disabled\" class=\"btn btn-danger\" />\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\n\timport axios from \"axios\"\n\timport swal from \"sweetalert2\"\n\timport store from \"../vuex/store\"\n\n\texport default {\n\n\t\tdate() {\n\t\t\treturn {\n\t\t\t\tisDeleting: false\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\t// method to mark all notifications as read\n\t\t\tmarkAsRead: async function () {\n\t\t\t\tconst response = await axios.post(\n\t\t\t\t\tthis.$apiURL + \"/markNotificationsAsRead\",\n\t\t\t\t\tnull,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: this.$headers\n\t\t\t\t\t}\n\t\t\t\t)\n\n\t\t\t\tif (response.data.status == \"success\") {\n\t\t\t\t\t// update in local array\n\t\t\t\t\tconst tempNotifications = store.getters.getNotifications\n\t\t\t\t\tfor (let a = 0; a < tempNotifications.length; a++) {\n\t\t\t\t\t\ttempNotifications[a].isRead = true\n\t\t\t\t\t}\n\t\t\t\t\tstore.commit(\"setNotifications\", tempNotifications)\n\n\t\t\t\t\t// set the unread notifications to zero\n\t\t\t\t\tstore.commit(\"setUnreadNotifications\", 0)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// method to delete the notification\n\t\t\tdeleteNotification: async function () {\n\t\t\t\tconst form = event.target\n\t\t\t\tconst _id = form._id.value\n\t\t\t\tconst formData = new FormData(form)\n\n\t\t\t\tthis.isDeleting = true\n\n\t\t\t\tconst response = await axios.post(\n\t\t\t\t\tthis.$apiURL + \"/deleteNotification\",\n\t\t\t\t\tformData,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: this.$headers\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tthis.isDeleting = false\n\n\t\t\t\tif (response.data.status == \"success\") {\n\t\t\t\t\t// remove from local array\n\t\t\t\t\tconst tempNotifications = store.getters.getNotifications\n\t\t\t\t\tfor (let a = 0; a < tempNotifications.length; a++) {\n\t\t\t\t\t\tif (tempNotifications[a]._id == _id) {\n\t\t\t\t\t\t\ttempNotifications.splice(a, 1)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstore.commit(\"setNotifications\", tempNotifications)\n\t\t\t\t} else {\n\t\t\t\t\tswal.fire(\"Error\", response.data.message, \"error\");\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\n\t\t// on page loaded, mark all notifications as read\n\t\tmounted: function () {\n\t\t\tthis.markAsRead()\n\t\t},\n\n\t\t// create computed property for all notifications\n\t    computed: {\n\t\t\tnotifications() {\n\t\t\t\treturn store.getters.getNotifications.reverse()\n\t\t\t}\n\t\t}\n\t}\n</script>"],"mappings":";;EACMA,KAAK,EAAC,WAAW;EAACC,KAAyB,EAAzB;IAAA;EAAA;;gCAEtBC,mBAAA,CAIS;EAJJF,KAAK,EAAC;AAAK,I,aACTE,mBAAA,CAEM;EAFDF,KAAK,EAAC;AAAW,I,aAClBE,mBAAA,CAA0C;EAAtCF,KAAK,EAAC;AAAa,GAAC,eAAa,E;;EAI3CA,KAAK,EAAC;AAAK;;EACVA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAmB;gCAC/BE,mBAAA,CAKQ,gB,aAJPA,mBAAA,CAGK,a,aAFJA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAgB,YAAZ,SAAO,E;;;;EAiBPD,KAAsB,EAAtB;IAAA;EAAA;AAAsB;;;;uBAhChCE,mBAAA,CA2CM,OA3CNC,UA2CM,GA1CLC,mBAAA,aAAgB,EAChBC,UAIS,EAETJ,mBAAA,CAkCM,OAlCNK,UAkCM,GAjCLL,mBAAA,CAgCM,OAhCNM,UAgCM,GA/BLH,mBAAA,4BAA+B,EAC/BH,mBAAA,CA6BQ,SA7BRO,UA6BQ,GA5BPC,UAKQ,EAERR,mBAAA,CAoBQ,iB,kBAnBPC,mBAAA,CAkBKQ,SAAA,QAAAC,WAAA,CAlBsBC,QAAA,CAAAC,aAAa,EAA7BC,YAAY;yBAAvBZ,mBAAA,CAkBK;MAlB4Ca,GAAG,EAAED,YAAY,CAACE;QAClEZ,mBAAA,+BAAkC,EAClCH,mBAAA,CAOK,aANJA,mBAAA,CAAwC;mBAAlCgB,gBAAA,CAAQH,YAAY,CAACI,IAAI;0DAAS,IAExC,GAAAd,mBAAA,kEAAqE,EACrDU,YAAY,CAACI,IAAI,sB,cAChChB,mBAAA,CAA8C;;mBAAxCe,gBAAA,CAAQH,YAAY,CAACK,KAAK,CAACC,IAAI;gFAIvChB,mBAAA,yCAA4C,EAC5CH,mBAAA,CAKK,MALLoB,UAKK,GAJJpB,mBAAA,CAGO;MAHIqB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUb,QAAA,CAAAc,kBAAA,IAAAd,QAAA,CAAAc,kBAAA,IAAAD,IAAA,CAAkB;QAC5CxB,mBAAA,CAA2E;MAApEiB,IAAI,EAAC,QAAQ;MAACE,IAAI,EAAC,KAAK;MAAQO,KAAK,EAAEb,YAAY,CAACE,GAAG;MAAEY,QAAQ,EAAR;0CAChE3B,mBAAA,CAAgI;MAAzHiB,IAAI,EAAC,QAAQ;MAAQS,KAAK,EAAEE,IAAA,CAAAC,UAAU;MAAoCA,UAAU,EAAED,IAAA,CAAAE,QAAQ;MAAEhC,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}