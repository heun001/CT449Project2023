{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport RegisterComponent from \"./components/RegisterComponent.vue\";\nimport LoginComponent from \"./components/LoginComponent.vue\";\nimport HomeComponent from \"./components/HomeComponent.vue\";\nimport AddContactComponent from \"./components/AddContactComponent.vue\";\nimport ChatComponent from \"./components/ChatComponent.vue\";\nimport GroupsComponent from \"./components/GroupsComponent.vue\";\nimport AddGroupComponent from \"./components/AddGroupComponent.vue\";\nimport NotificationsComponent from \"./components/NotificationsComponent.vue\";\nconst routes = [{\n  path: \"/register\",\n  component: RegisterComponent\n}, {\n  path: '/login',\n  component: LoginComponent\n}, {\n  path: '/',\n  component: HomeComponent\n}, {\n  path: \"/contacts/add\",\n  component: AddContactComponent\n}, {\n  path: \"/chat/:email\",\n  component: ChatComponent\n}, {\n  path: \"/groups\",\n  component: GroupsComponent\n}, {\n  path: \"/groups/add\",\n  component: AddGroupComponent\n}, {\n  path: \"/notifications\",\n  component: NotificationsComponent\n}];\nconst router = createRouter({\n  // Provide the history implementation to use. We are using the hash history for simplicity here.\n  history: createWebHistory(),\n  routes // short for `routes: routes`\n});\n\nconst app = createApp(App);\napp.use(router);\napp.config.globalProperties.$mainURL = \"http://localhost:8080\";\napp.config.globalProperties.$apiURL = \"http://localhost:3000\";\napp.config.globalProperties.$accessTokenKey = \"accessTokenKey\";\napp.config.globalProperties.$user = null;\napp.config.globalProperties.$login = false;\napp.config.globalProperties.$headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'Bearer ' + localStorage.getItem(\"accessTokenKey\")\n};\napp.mount('#app');","map":{"version":3,"names":["createApp","App","createRouter","createWebHistory","RegisterComponent","LoginComponent","HomeComponent","AddContactComponent","ChatComponent","GroupsComponent","AddGroupComponent","NotificationsComponent","routes","path","component","router","history","app","use","config","globalProperties","$mainURL","$apiURL","$accessTokenKey","$user","$login","$headers","localStorage","getItem","mount"],"sources":["D:/2023/2023_PTUDW/chat-station-mevn-free/chat-station-mevn-free/web/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\n\nimport { createRouter, createWebHistory } from 'vue-router'\nimport RegisterComponent from \"./components/RegisterComponent.vue\"\nimport LoginComponent from \"./components/LoginComponent.vue\"\nimport HomeComponent from \"./components/HomeComponent.vue\"\nimport AddContactComponent from \"./components/AddContactComponent.vue\"\nimport ChatComponent from \"./components/ChatComponent.vue\"\nimport GroupsComponent from \"./components/GroupsComponent.vue\"\nimport AddGroupComponent from \"./components/AddGroupComponent.vue\"\nimport NotificationsComponent from \"./components/NotificationsComponent.vue\"\n\n\n\nconst routes = [\n    { path: \"/register\", component: RegisterComponent },\n    { path: '/login', component: LoginComponent },\n    { path: '/', component: HomeComponent },\n    { path: \"/contacts/add\", component: AddContactComponent },\n    { path: \"/chat/:email\", component: ChatComponent },\n    { path: \"/groups\", component: GroupsComponent },\n    { path: \"/groups/add\", component: AddGroupComponent },\n    { path: \"/notifications\", component: NotificationsComponent },\n\n\n\n\n];\n\nconst router = createRouter({\n    // Provide the history implementation to use. We are using the hash history for simplicity here.\n    history: createWebHistory(),\n    routes, // short for `routes: routes`\n})\nconst app = createApp(App)\napp.use(router)\n\napp.config.globalProperties.$mainURL = \"http://localhost:8080\"\napp.config.globalProperties.$apiURL = \"http://localhost:3000\"\n\napp.config.globalProperties.$accessTokenKey = \"accessTokenKey\"\n\napp.config.globalProperties.$user = null;\napp.config.globalProperties.$login = false;\napp.config.globalProperties.$headers = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer ' + localStorage.getItem(\"accessTokenKey\")\n};\n\napp.mount('#app')"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAE3B,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAOC,sBAAsB,MAAM,yCAAyC;AAI5E,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEV;AAAkB,CAAC,EACnD;EAAES,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAET;AAAe,CAAC,EAC7C;EAAEQ,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAER;AAAc,CAAC,EACvC;EAAEO,IAAI,EAAE,eAAe;EAAEC,SAAS,EAAEP;AAAoB,CAAC,EACzD;EAAEM,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAEN;AAAc,CAAC,EAClD;EAAEK,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEL;AAAgB,CAAC,EAC/C;EAAEI,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAEJ;AAAkB,CAAC,EACrD;EAAEG,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEH;AAAuB,CAAC,CAKhE;AAED,MAAMI,MAAM,GAAGb,YAAY,CAAC;EACxB;EACAc,OAAO,EAAEb,gBAAgB,CAAC,CAAC;EAC3BS,MAAM,CAAE;AACZ,CAAC,CAAC;;AACF,MAAMK,GAAG,GAAGjB,SAAS,CAACC,GAAG,CAAC;AAC1BgB,GAAG,CAACC,GAAG,CAACH,MAAM,CAAC;AAEfE,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACC,QAAQ,GAAG,uBAAuB;AAC9DJ,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACE,OAAO,GAAG,uBAAuB;AAE7DL,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACG,eAAe,GAAG,gBAAgB;AAE9DN,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACI,KAAK,GAAG,IAAI;AACxCP,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACK,MAAM,GAAG,KAAK;AAC1CR,GAAG,CAACE,MAAM,CAACC,gBAAgB,CAACM,QAAQ,GAAG;EACnC,cAAc,EAAE,kBAAkB;EAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB;AACtE,CAAC;AAEDX,GAAG,CAACY,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}