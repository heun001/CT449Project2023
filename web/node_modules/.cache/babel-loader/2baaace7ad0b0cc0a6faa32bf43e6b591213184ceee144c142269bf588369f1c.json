{"ast":null,"code":"// axios for calling AJAX\nimport axios from \"axios\";\n\n// to show pop-up alerts\nimport swal from \"sweetalert2\";\n\n// vuex store is used to use the variables throughout the application\nimport store from \"../vuex/store\";\nexport default {\n  data() {\n    return {\n      isDeleting: false,\n      // logged-in user object\n      user: null\n    };\n  },\n  // using computed property, we can update value from anywhere in the app\n  computed: {\n    groups() {\n      return store.getters.getGroups;\n    }\n  },\n  methods: {\n    // a method to fetch all groups from API\n    getData: async function (request, result) {\n      const response = await axios.post(this.$apiURL + \"/groups/fetch\", null, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        // set logged-in user object\n        this.user = response.data.user;\n\n        // call the setGroups from vuex store\n        store.commit(\"setGroups\", response.data.groups);\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n    }\n  },\n  // get the data when this component is mounted\n  mounted: function () {\n    this.getData();\n  }\n};","map":{"version":3,"names":["axios","swal","store","data","isDeleting","user","computed","groups","getters","getGroups","methods","getData","request","result","response","post","$apiURL","headers","$headers","status","commit","fire","message","mounted"],"sources":["D:\\2023\\2023_PTUDW\\chat-station-mevn-free\\chat-station-mevn-free\\web\\src\\components\\GroupsComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"offset-md-10 col-md-2\">\r\n                <!-- link to create group -->\r\n                <router-link class=\"btn btn-primary\" to=\"/groups/add\">Add group</router-link>\r\n            </div>\r\n            <!-- show all groups -->\r\n            <div class=\"col-md-12\">\r\n                <table class=\"table table-hover\">\r\n                    <!-- heading of table -->\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Created by</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <!-- loop through all groups -->\r\n                        <tr v-for=\"group in groups\" v-bind:key=\"group._id\">\r\n                            <td>\r\n                                <!-- show group name -->\r\n                                <span v-text=\"group.name\"></span>\r\n                            </td>\r\n\r\n                            <!-- the admin of group -->\r\n                            <td v-text=\"group.createdBy.name\"></td>\r\n\r\n                            <td style=\"display: flex;\">\r\n\r\n                                <!-- buttons to edit and delete the group, only for group admin -->\r\n                                <template v-if=\"user != null && group.createdBy._id == user._id\">\r\n                                    <!-- edit the group -->\r\n                                    <router-link v-bind:to=\"'/groups/edit/' + group._id\" class=\"btn btn-primary\"\r\n                                        style=\"margin-right: 10px;\">Edit</router-link>\r\n\r\n                                    <!-- delete the group -->\r\n                                    <form v-on:submit.prevent=\"deleteGroup\">\r\n                                        <input type=\"hidden\" name=\"_id\" v-bind:value=\"group._id\" required />\r\n                                        <input type=\"submit\" v-bind:value=\"isDeleting ? 'Deleting...' : 'Delete'\"\r\n                                            v-bind:isDeleting=\"disabled\" class=\"btn btn-danger\" />\r\n                                    </form>\r\n                                </template>\r\n                                <!-- a button to invite member -->\r\n                                <a v-bind:data-id=\"group._id\" v-on:click.prevent=\"inviteMember\" class=\"btn btn-success\"\r\n                                    style=\"margin-left: 10px;\">Invite member</a>\r\n\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n<script>\r\n\r\n// axios for calling AJAX\r\nimport axios from \"axios\"\r\n\r\n// to show pop-up alerts\r\nimport swal from \"sweetalert2\"\r\n\r\n// vuex store is used to use the variables throughout the application\r\nimport store from \"../vuex/store\"\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            isDeleting: false,\r\n\r\n            // logged-in user object\r\n            user: null\r\n        }\r\n    },\r\n\r\n    // using computed property, we can update value from anywhere in the app\r\n    computed: {\r\n        groups() {\r\n            return store.getters.getGroups\r\n        }\r\n    },\r\n\r\n    methods: {\r\n\r\n\r\n        \r\n        // a method to fetch all groups from API\r\n        getData: async function (request, result) {\r\n            const response = await axios.post(\r\n                this.$apiURL + \"/groups/fetch\",\r\n                null,\r\n                {\r\n                    headers: this.$headers\r\n                }\r\n            )\r\n\r\n            if (response.data.status == \"success\") {\r\n                // set logged-in user object\r\n                this.user = response.data.user\r\n\r\n                // call the setGroups from vuex store\r\n                store.commit(\"setGroups\", response.data.groups)\r\n            } else {\r\n                swal.fire(\"Error\", response.data.message, \"error\");\r\n            }\r\n        }\r\n    },\r\n\r\n    // get the data when this component is mounted\r\n    mounted: function () {\r\n        this.getData()\r\n    }\r\n}\r\n</script>"],"mappings":"AA6DA;AACA,OAAOA,KAAI,MAAO,OAAM;;AAExB;AACA,OAAOC,IAAG,MAAO,aAAY;;AAE7B;AACA,OAAOC,KAAI,MAAO,eAAc;AAEhC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,KAAK;MAEjB;MACAC,IAAI,EAAE;IACV;EACJ,CAAC;EAED;EACAC,QAAQ,EAAE;IACNC,MAAMA,CAAA,EAAG;MACL,OAAOL,KAAK,CAACM,OAAO,CAACC,SAAQ;IACjC;EACJ,CAAC;EAEDC,OAAO,EAAE;IAIL;IACAC,OAAO,EAAE,eAAAA,CAAgBC,OAAO,EAAEC,MAAM,EAAE;MACtC,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAC7B,IAAI,CAACC,OAAM,GAAI,eAAe,EAC9B,IAAI,EACJ;QACIC,OAAO,EAAE,IAAI,CAACC;MAClB,CACJ;MAEA,IAAIJ,QAAQ,CAACX,IAAI,CAACgB,MAAK,IAAK,SAAS,EAAE;QACnC;QACA,IAAI,CAACd,IAAG,GAAIS,QAAQ,CAACX,IAAI,CAACE,IAAG;;QAE7B;QACAH,KAAK,CAACkB,MAAM,CAAC,WAAW,EAAEN,QAAQ,CAACX,IAAI,CAACI,MAAM;MAClD,OAAO;QACHN,IAAI,CAACoB,IAAI,CAAC,OAAO,EAAEP,QAAQ,CAACX,IAAI,CAACmB,OAAO,EAAE,OAAO,CAAC;MACtD;IACJ;EACJ,CAAC;EAED;EACAC,OAAO,EAAE,SAAAA,CAAA,EAAY;IACjB,IAAI,CAACZ,OAAO,CAAC;EACjB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}